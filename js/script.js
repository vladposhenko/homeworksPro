const userData = {
    'USD': 1000,
    'EUR': 900,
    'UAH': 15000,
    'BIF': 20000,
    'AOA': 100
}


const bankData = {
    'USD': {
        max: 3000,
        min: 100,
        img: 'üíµ'
    },
    'EUR': {
        max: 1000,
        min: 50,
        img: 'üí∂'
    },
    'UAH': {
        max: 0,
        min: 0,
        img: 'üí¥'
    },
    'GBP': {
        max: 10000,
        min: 100,
        img: 'üí∑'
    }
}

function getCurrency (curren) {
    let result
    for(key in userData) {
        if(curren === key)  result = key;
      }
    return result
}

function getCurrencyMoney (curren, data) {
    let result
    for(key in data) {
        if(curren === key)  result = data[key];
      }
    return result
}


let balance = confirm("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–∞—Ä—Ç–µ?")

function getMoney (userData, bankData ) {
    return new Promise(function (resolve, rejcet){
        if(balance) resolve(userData)
        rejcet({userData: userData, bankData: bankData})
    }) 
}



let currency, check = ''
getMoney(userData, bankData)
    .then((data) => {
            do {
                currency = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ USD, EUR, UAH, BIF, AOA")
                check = getCurrency(currency);
            }while(currency != check)
            console.log(`–ë–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: ${getCurrencyMoney(currency, data)} ${currency}`);
            console.log("–°–ø–∞—Å–∏–±–æ, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!  üòä");
    })
    .catch((data) => {
        do {
            currency = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ USD, EUR, UAH, BIF, AOA")
            check = getCurrency(currency);
        }while(currency != check)
        if(data.bankData[currency] === undefined || data.bankData[currency].max === 0) return console.log('–î–∞–Ω–æ–π –≤–∞–ª—é—Ç—ã –Ω–µ—Ç—É –≤ –±–∞–Ω–∫–µ –Ω–∞ –¥–∞–Ω—ã–π –º–æ–º–µ–Ω—Ç');
        let suma = prompt(`–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è —Å–Ω—è—Ç–∏—è - min ${data.bankData[currency].min}, max - ${data.bankData[currency].max}`)
        if(suma > data.bankData[currency].max) {
            console.log(`–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –±–æ–ª—å—à–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–Ω—è—Ç–∏—è:${data.bankData[currency].max}`);
        } else if (suma < data.bankData[currency].min ) {
            console.log(`–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –º–µ–Ω—å—à–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–π. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–Ω—è—Ç–∏—è: ${data.bankData[currency].min}`);
        } else if (suma > data.userData[currency]) {
            console.log(`–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–Ω—è—Ç–∏—è –¥–µ–Ω–µ–≥, –≤–∞—à –±–∞–ª–∞–Ω—Å ${data.userData[currency]}`);
        } else {
            console.log(`–í–æ—Ç –≤–∞—à–∏ –¥–µ–Ω–µ–∂–∫–∏ ${suma} ${currency} ${data.bankData[currency].img}`);
            console.log('–°–ø–∞—Å–∏–±–æ, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!  üòä');
        }
    })



